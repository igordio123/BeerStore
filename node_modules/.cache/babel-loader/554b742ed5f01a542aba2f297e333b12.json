{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\project\\\\jsproject\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\project\\\\jsproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\project\\\\jsproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\n\nvar GitSrvices = function GitSrvices() {\n  var _this = this;\n\n  _classCallCheck(this, GitSrvices);\n\n  this.getData =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(url) {\n      var body, jsonData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(url);\n\n            case 2:\n              body = _context.sent;\n              jsonData = body.json();\n              return _context.abrupt(\"return\", jsonData);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  this.getUser =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(name) {\n      var res, transf;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _this.getData(\"https://api.github.com/users/\".concat(name, \"?client_id=\").concat(_this.client_id, \"&client_secret=\").concat(_this.client_secret));\n\n            case 2:\n              res = _context2.sent;\n              transf = _this.userTransform(res);\n              return _context2.abrupt(\"return\", transf);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  this.getRepo =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(name) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this.getData(\"https://api.github.com/users/\".concat(name, \"/repos?per_page=\", 5, \"&sort=\", 'created:asc', \"client_id=\").concat(_this.client_id, \"&client_secret=\").concat(_this.client_secret));\n\n            case 2:\n              res = _context3.sent;\n              return _context3.abrupt(\"return\", res.map(function (e) {\n                _this.reposTransform(e);\n              }));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  this.userTransform = function (user) {\n    return {\n      id: user.id,\n      name: user.name,\n      img: user.avatar_url,\n      repos: user.public_repos,\n      login: user.login,\n      message: user.message,\n      create: user.created_at,\n      followers: user.followers,\n      following: user.following,\n      url: user.html_url,\n      location: user.location,\n      email: user.email,\n      gists: user.public_gists\n    };\n  };\n\n  this.reposTransform =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(repos) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", {\n                name: repos.name,\n                url: repos.html_url\n              });\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  this.client_id = '08ad1fdda76524dfbc8c';\n  this.client_secret = 'e4f232b38f068c2598f02ccd182eb236a9e59031';\n};\n\n;\nexport default GitSrvices;","map":{"version":3,"sources":["C:\\project\\jsproject\\src\\GitHubService\\GitHubService.js"],"names":["GitSrvices","getData","url","fetch","body","jsonData","json","getUser","name","client_id","client_secret","res","transf","userTransform","getRepo","map","e","reposTransform","user","id","img","avatar_url","repos","public_repos","login","message","create","created_at","followers","following","html_url","location","email","gists","public_gists"],"mappings":";;;;IAAMA,U,GACN,sBAAa;AAAA;;AAAA;;AAAA,OAKXC,OALW;AAAA;AAAA;AAAA;AAAA;AAAA,6BAKF,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACYC,KAAK,CAACD,GAAD,CADjB;;AAAA;AACDE,cAAAA,IADC;AAEDC,cAAAA,QAFC,GAEUD,IAAI,CAACE,IAAL,EAFV;AAAA,+CAGAD,QAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALE;;AAAA;AAAA;AAAA;AAAA;;AAAA,OAWXE,OAXW;AAAA;AAAA;AAAA;AAAA;AAAA,6BAWD,kBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACU,KAAI,CAACP,OAAL,wCAA6CO,IAA7C,wBAA+D,KAAI,CAACC,SAApE,4BAA+F,KAAI,CAACC,aAApG,EADV;;AAAA;AACFC,cAAAA,GADE;AAEFC,cAAAA,MAFE,GAEO,KAAI,CAACC,aAAL,CAAmBF,GAAnB,CAFP;AAAA,gDAGDC,MAHC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXC;;AAAA;AAAA;AAAA;AAAA;;AAAA,OAiBXE,OAjBW;AAAA;AAAA;AAAA;AAAA;AAAA,6BAiBD,kBAAMN,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACW,KAAI,CAACP,OAAL,wCAA6CO,IAA7C,sBAAoE,CAApE,YAA8E,aAA9E,uBAAwG,KAAI,CAACC,SAA7G,4BAAwI,KAAI,CAACC,aAA7I,EADX;;AAAA;AACFC,cAAAA,GADE;AAAA,gDAEDA,GAAG,CAACI,GAAJ,CAAQ,UAACC,CAAD,EAAK;AAAC,gBAAA,KAAI,CAACC,cAAL,CAAoBD,CAApB;AAAuB,eAArC,CAFC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAjBC;;AAAA;AAAA;AAAA;AAAA;;AAAA,OAuBXH,aAvBW,GAuBK,UAACK,IAAD,EAAS;AAEvB,WAAO;AACLC,MAAAA,EAAE,EAAED,IAAI,CAACC,EADJ;AAELX,MAAAA,IAAI,EAAGU,IAAI,CAACV,IAFP;AAGLY,MAAAA,GAAG,EAACF,IAAI,CAACG,UAHJ;AAILC,MAAAA,KAAK,EAAGJ,IAAI,CAACK,YAJR;AAKLC,MAAAA,KAAK,EAAGN,IAAI,CAACM,KALR;AAMLC,MAAAA,OAAO,EAAGP,IAAI,CAACO,OANV;AAOLC,MAAAA,MAAM,EAAGR,IAAI,CAACS,UAPT;AAQLC,MAAAA,SAAS,EAAGV,IAAI,CAACU,SARZ;AASLC,MAAAA,SAAS,EAAGX,IAAI,CAACW,SATZ;AAUL3B,MAAAA,GAAG,EAAGgB,IAAI,CAACY,QAVN;AAWLC,MAAAA,QAAQ,EAAGb,IAAI,CAACa,QAXX;AAYLC,MAAAA,KAAK,EAAGd,IAAI,CAACc,KAZR;AAaLC,MAAAA,KAAK,EAAGf,IAAI,CAACgB;AAbR,KAAP;AAiBH,GA1CY;;AAAA,OA2CZjB,cA3CY;AAAA;AAAA;AAAA;AAAA;AAAA,6BA2CK,kBAAOK,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,gDAEP;AAELd,gBAAAA,IAAI,EAAGc,KAAK,CAACd,IAFR;AAGLN,gBAAAA,GAAG,EAAGoB,KAAK,CAACQ;AAHP,eAFO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA3CL;;AAAA;AAAA;AAAA;AAAA;;AACX,OAAKrB,SAAL,GAAiB,sBAAjB;AACA,OAAKC,aAAL,GAAqB,0CAArB;AACD,C;;AAkDA;AAED,eAAeV,UAAf","sourcesContent":["class GitSrvices {\r\nconstructor(){\r\n  this.client_id = '08ad1fdda76524dfbc8c';\r\n  this.client_secret = 'e4f232b38f068c2598f02ccd182eb236a9e59031'\r\n}\r\n\r\n  getData= async (url) =>{\r\n    const body = await fetch(url);\r\n    const jsonData = body.json();\r\n    return jsonData\r\n  };\r\n\r\n  getUser = async (name) =>{\r\n    const res = await this.getData(`https://api.github.com/users/${name}?client_id=${this.client_id}&client_secret=${this.client_secret}`);\r\n    const transf = this.userTransform(res)\r\n    return transf;\r\n  };\r\n\r\n  getRepo = async(name)=>{\r\n    const res =  await this.getData(`https://api.github.com/users/${name}/repos?per_page=${5}&sort=${'created:asc'}client_id=${this.client_id}&client_secret=${this.client_secret}`);\r\n    return res.map((e)=>{this.reposTransform(e)})\r\n  }\r\n\r\n\r\n  userTransform = (user) =>{\r\n\r\n    return {\r\n      id :user.id,\r\n      name : user.name,\r\n      img:user.avatar_url,\r\n      repos : user.public_repos,\r\n      login : user.login,\r\n      message : user.message,\r\n      create : user.created_at,\r\n      followers : user.followers,\r\n      following : user.following,\r\n      url : user.html_url,\r\n      location : user.location,\r\n      email : user.email,\r\n      gists : user.public_gists,\r\n\r\n\r\n    }\r\n}\r\n reposTransform = async (repos) =>{\r\n\r\n    return {\r\n\r\n      name : repos.name,\r\n      url : repos.html_url,\r\n\r\n\r\n    }\r\n  }\r\n};\r\n\r\nexport default GitSrvices\r\n"]},"metadata":{},"sourceType":"module"}