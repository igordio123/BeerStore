{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\project\\\\jsproject\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\project\\\\jsproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\project\\\\jsproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\project\\\\jsproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar GitSrvices =\n/*#__PURE__*/\nfunction () {\n  function GitSrvices() {\n    var _this = this;\n\n    _classCallCheck(this, GitSrvices);\n\n    this.getUser =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(name) {\n        var res, transf;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.getData(\"https://api.github.com/users/\".concat(name, \"?client_id=\").concat(_this.client_id, \"&clie\"));\n\n              case 2:\n                res = _context.sent;\n                transf = _this.userTransform(res);\n                return _context.abrupt(\"return\", transf);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.userTransform = function (user) {\n      return {\n        id: user.id,\n        name: user.name,\n        img: user.avatar_url,\n        repos: user.public_repos,\n        login: user.login,\n        message: user.message\n      };\n    };\n\n    this.client_id = '08ad1fdda76524dfbc8c';\n    this.client_secret = 'e4f232b38f068c2598f02ccd182eb236a9e59031';\n  }\n\n  _createClass(GitSrvices, [{\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(url) {\n        var body, jsonData;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(url);\n\n              case 2:\n                body = _context2.sent;\n                jsonData = body.json();\n                return _context2.abrupt(\"return\", jsonData);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getData(_x2) {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }()\n  }, {\n    key: \"getRepo\",\n    value: function getRepo(name) {\n      var res = this.getData(\"https://api.github.com/users/\".concat(name, \"/repos\"));\n      return res;\n    }\n  }]);\n\n  return GitSrvices;\n}();\n\n;\nexport default GitSrvices;","map":{"version":3,"sources":["C:\\project\\jsproject\\src\\GitHubService\\GitHubService.js"],"names":["GitSrvices","getUser","name","getData","client_id","res","transf","userTransform","user","id","img","avatar_url","repos","public_repos","login","message","client_secret","url","fetch","body","jsonData","json"],"mappings":";;;;;IAAMA,U;;;AACN,wBAAa;AAAA;;AAAA;;AAAA,SAWXC,OAXW;AAAA;AAAA;AAAA;AAAA;AAAA,+BAWD,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACU,KAAI,CAACC,OAAL,wCAA6CD,IAA7C,wBAA+D,KAAI,CAACE,SAApE,WADV;;AAAA;AACFC,gBAAAA,GADE;AAEFC,gBAAAA,MAFE,GAEO,KAAI,CAACC,aAAL,CAAmBF,GAAnB,CAFP;AAAA,iDAGDC,MAHC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAXC;;AAAA;AAAA;AAAA;AAAA;;AAAA,SAuBXC,aAvBW,GAuBK,UAACC,IAAD,EAAS;AAEvB,aAAO;AACLC,QAAAA,EAAE,EAAED,IAAI,CAACC,EADJ;AAELP,QAAAA,IAAI,EAAGM,IAAI,CAACN,IAFP;AAGLQ,QAAAA,GAAG,EAACF,IAAI,CAACG,UAHJ;AAILC,QAAAA,KAAK,EAAGJ,IAAI,CAACK,YAJR;AAKLC,QAAAA,KAAK,EAAGN,IAAI,CAACM,KALR;AAMLC,QAAAA,OAAO,EAAGP,IAAI,CAACO;AANV,OAAP;AASH,KAlCY;;AACX,SAAKX,SAAL,GAAiB,sBAAjB;AACA,SAAKY,aAAL,GAAqB,0CAArB;AACD;;;;;;;iDAEgBC,G;;;;;;;uBACMC,KAAK,CAACD,GAAD,C;;;AAAlBE,gBAAAA,I;AACAC,gBAAAA,Q,GAAWD,IAAI,CAACE,IAAL,E;kDACVD,Q;;;;;;;;;;;;;;;;;;4BASDlB,I,EAAK;AACX,UAAMG,GAAG,GAAG,KAAKF,OAAL,wCAA6CD,IAA7C,YAAZ;AACA,aAAOG,GAAP;AACD;;;;;;AAgBF;AAED,eAAeL,UAAf","sourcesContent":["class GitSrvices {\r\nconstructor(){\r\n  this.client_id = '08ad1fdda76524dfbc8c';\r\n  this.client_secret = 'e4f232b38f068c2598f02ccd182eb236a9e59031'\r\n}\r\n\r\n  async getData (url){\r\n    const body = await fetch(url);\r\n    const jsonData = body.json();\r\n    return jsonData\r\n  };\r\n\r\n  getUser = async (name) =>{\r\n    const res = await this.getData(`https://api.github.com/users/${name}?client_id=${this.client_id}&clie`);\r\n    const transf = this.userTransform(res)\r\n    return transf;\r\n  };\r\n\r\n  getRepo(name){\r\n    const res = this.getData(`https://api.github.com/users/${name}/repos`);\r\n    return res\r\n  }\r\n\r\n\r\n  userTransform = (user) =>{\r\n\r\n    return {\r\n      id :user.id,\r\n      name : user.name,\r\n      img:user.avatar_url,\r\n      repos : user.public_repos,\r\n      login : user.login,\r\n      message : user.message\r\n\r\n    }\r\n}\r\n\r\n};\r\n\r\nexport default GitSrvices\r\n"]},"metadata":{},"sourceType":"module"}