{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\project\\\\jsproject\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\project\\\\jsproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\project\\\\jsproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\project\\\\jsproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar GitSrvices =\n/*#__PURE__*/\nfunction () {\n  function GitSrvices() {\n    var _this = this;\n\n    _classCallCheck(this, GitSrvices);\n\n    this.getData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(url) {\n        var body, jsonData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(url);\n\n              case 2:\n                body = _context.sent;\n                jsonData = body.json();\n                return _context.abrupt(\"return\", jsonData);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.getUser =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(name) {\n        var res, transf;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this.getData(\"https://api.github.com/users/\".concat(name, \"?client_id=\").concat(_this.client_id, \"&client_secret=\").concat(_this.client_secret));\n\n              case 2:\n                res = _context2.sent;\n                transf = _this.userTransform(res);\n                return _context2.abrupt(\"return\", transf);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    this.userTransform = function (user) {\n      return {\n        id: user.id,\n        name: user.name,\n        img: user.avatar_url,\n        repos: user.public_repos,\n        login: user.login,\n        message: user.message,\n        create: user.created_at,\n        followers: user.followers,\n        following: user.following,\n        url: user.html_url,\n        location: user.location,\n        email: user.email,\n        gists: user.public_gists\n      };\n    };\n\n    this.client_id = '08ad1fdda76524dfbc8c';\n    this.client_secret = 'e4f232b38f068c2598f02ccd182eb236a9e59031';\n  }\n\n  _createClass(GitSrvices, [{\n    key: \"getRepo\",\n    value: function getRepo(name) {\n      var res = this.getData(\"https://api.github.com/users/\".concat(name, \"/repos?client_id=\").concat(this.client_id, \"&client_secret=\").concat(this.client_secret));\n      return res;\n    }\n  }]);\n\n  return GitSrvices;\n}();\n\n;\nexport default GitSrvices;","map":{"version":3,"sources":["C:\\project\\jsproject\\src\\GitHubService\\GitHubService.js"],"names":["GitSrvices","getData","url","fetch","body","jsonData","json","getUser","name","client_id","client_secret","res","transf","userTransform","user","id","img","avatar_url","repos","public_repos","login","message","create","created_at","followers","following","html_url","location","email","gists","public_gists"],"mappings":";;;;;IAAMA,U;;;AACN,wBAAa;AAAA;;AAAA;;AAAA,SAKXC,OALW;AAAA;AAAA;AAAA;AAAA;AAAA,+BAKF,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACYC,KAAK,CAACD,GAAD,CADjB;;AAAA;AACDE,gBAAAA,IADC;AAEDC,gBAAAA,QAFC,GAEUD,IAAI,CAACE,IAAL,EAFV;AAAA,iDAGAD,QAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALE;;AAAA;AAAA;AAAA;AAAA;;AAAA,SAWXE,OAXW;AAAA;AAAA;AAAA;AAAA;AAAA,+BAWD,kBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACU,KAAI,CAACP,OAAL,wCAA6CO,IAA7C,wBAA+D,KAAI,CAACC,SAApE,4BAA+F,KAAI,CAACC,aAApG,EADV;;AAAA;AACFC,gBAAAA,GADE;AAEFC,gBAAAA,MAFE,GAEO,KAAI,CAACC,aAAL,CAAmBF,GAAnB,CAFP;AAAA,kDAGDC,MAHC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAXC;;AAAA;AAAA;AAAA;AAAA;;AAAA,SAuBXC,aAvBW,GAuBK,UAACC,IAAD,EAAS;AAEvB,aAAO;AACLC,QAAAA,EAAE,EAAED,IAAI,CAACC,EADJ;AAELP,QAAAA,IAAI,EAAGM,IAAI,CAACN,IAFP;AAGLQ,QAAAA,GAAG,EAACF,IAAI,CAACG,UAHJ;AAILC,QAAAA,KAAK,EAAGJ,IAAI,CAACK,YAJR;AAKLC,QAAAA,KAAK,EAAGN,IAAI,CAACM,KALR;AAMLC,QAAAA,OAAO,EAAGP,IAAI,CAACO,OANV;AAOLC,QAAAA,MAAM,EAAGR,IAAI,CAACS,UAPT;AAQLC,QAAAA,SAAS,EAAGV,IAAI,CAACU,SARZ;AASLC,QAAAA,SAAS,EAAGX,IAAI,CAACW,SATZ;AAULvB,QAAAA,GAAG,EAAGY,IAAI,CAACY,QAVN;AAWLC,QAAAA,QAAQ,EAAGb,IAAI,CAACa,QAXX;AAYLC,QAAAA,KAAK,EAAGd,IAAI,CAACc,KAZR;AAaLC,QAAAA,KAAK,EAAGf,IAAI,CAACgB;AAbR,OAAP;AAiBH,KA1CY;;AACX,SAAKrB,SAAL,GAAiB,sBAAjB;AACA,SAAKC,aAAL,GAAqB,0CAArB;AACD;;;;4BAcSF,I,EAAK;AACX,UAAMG,GAAG,GAAG,KAAKV,OAAL,wCAA6CO,IAA7C,8BAAqE,KAAKC,SAA1E,4BAAqG,KAAKC,aAA1G,EAAZ;AACA,aAAOC,GAAP;AACD;;;;;;AAwBF;AAED,eAAeX,UAAf","sourcesContent":["class GitSrvices {\r\nconstructor(){\r\n  this.client_id = '08ad1fdda76524dfbc8c';\r\n  this.client_secret = 'e4f232b38f068c2598f02ccd182eb236a9e59031'\r\n}\r\n\r\n  getData= async (url) =>{\r\n    const body = await fetch(url);\r\n    const jsonData = body.json();\r\n    return jsonData\r\n  };\r\n\r\n  getUser = async (name) =>{\r\n    const res = await this.getData(`https://api.github.com/users/${name}?client_id=${this.client_id}&client_secret=${this.client_secret}`);\r\n    const transf = this.userTransform(res)\r\n    return transf;\r\n  };\r\n\r\n  getRepo(name){\r\n    const res = this.getData(`https://api.github.com/users/${name}/repos?client_id=${this.client_id}&client_secret=${this.client_secret}`);\r\n    return res\r\n  }\r\n\r\n\r\n  userTransform = (user) =>{\r\n\r\n    return {\r\n      id :user.id,\r\n      name : user.name,\r\n      img:user.avatar_url,\r\n      repos : user.public_repos,\r\n      login : user.login,\r\n      message : user.message,\r\n      create : user.created_at,\r\n      followers : user.followers,\r\n      following : user.following,\r\n      url : user.html_url,\r\n      location : user.location,\r\n      email : user.email,\r\n      gists : user.public_gists,\r\n\r\n\r\n    }\r\n}\r\n\r\n};\r\n\r\nexport default GitSrvices\r\n"]},"metadata":{},"sourceType":"module"}